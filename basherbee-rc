#!/bin/bash

# tmux aliases are present in bash-it, following are missing there.

# This is for tmux based remote-ssh dev users, and it does the following:
# 1. Binds 'Esc+x' key-combo to help invoke tmux from non-tmux bash
# 2. Appends $weedir/tmux.conf contents to ~/.tmux.conf
#    These are customizations of tmux key-bindings, behavior, navigation, etc
# 3. Forces default shell startup in tmux window always (can be exited by ctrl-d).
#    To DISABLE tmux auto-launch per each bash session, do the following:
#    $ touch $weedir/disable-wee-tmux
#    If enabled, tmux can be either:
#    a. first-available previously detached-tmux session, re-attached automatically OR
#    b. new tmux session if there's no prev detached tmux session
if [ ! -f $weedir/disable-wee-tmux ]; then
	wtmux () {
		local sessions=$(tmux ls 2>/dev/null| grep -v "attached")
		if [ -n "${sessions}" ] && [ $(echo ${sessions} | wc -l) -gt 0 ]; then
			tmux attach -t $(echo ${sessions} | head -n1 | cut -d':' -f1)
		else
			tmux
		fi
	}
	if [ -z "$TMUX" ]; then
		# Shortcut 'Esc+x' to launch tmux
		bind -x '"\ex":"wtmux"'
		# Ensure wee-tmux.conf is sourced in default ~/.tmux.conf
		if [ ! -f ~/.tmux.conf ] || \
			[ -z "$(grep -F "source $weedir/wee-tmux.conf" ~/.tmux.conf 2>/dev/null)" ]; then
			echo "source $weedir/wee-tmux.conf" >> ~/.tmux.conf
		fi
		# If there's any prev detached tmux session, attach it
		# Else, start a fresh tmux session
		wtmux
	else
		# bash started in tmux, 'reset' tty to fix input/output issue
		reset
	fi
fi
